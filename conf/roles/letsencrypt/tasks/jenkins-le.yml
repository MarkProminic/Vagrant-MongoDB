--- 
- 
  file: 
    group: "{{ group }}"
    mode: "0700"
    owner: "{{ user }}"
    path: /etc/jenkins
    state: directory
  name: "Create /etc/jenkins if it does not exist"
- 
  copy: 
    dest: /etc/jenkins/jenkins.jks
    group: "{{ group }}"
    mode: "0600"
    owner: "{{ user }}"
    remote_src: true
    src: "/etc/letsencrypt/live/{{ certbot_domain }}/jenkins.jks"
  name: "Move the SSL to a secure Directory"
- 
  file: 
    mode: "0500"
    owner: "{{ user }}"
    path: "/etc/authbind/byport/{{ jenkins_port }}"
    state: touch
  name: "Use Authbind to Allow the user {{ user }} to run applications on {{ jenkins_port }}"
- 
  lineinfile: 
    line: "{{item.line}}"
    path: /etc/init.d/jenkins
    regexp: "{{item.regexp}}"
  loop: 
    - { regexp: "DAEMON_ARGS -- [$]JAVA" , line: '$SU -l $JENKINS_USER --shell=/bin/bash -c "$DAEMON $DAEMON_ARGS -- authbind $JAVA $JAVA_ARGS -jar $JENKINS_WAR $JENKINS_ARGS" || return 2' }
  name: "Set Jenkins Init.d File to start with Authbind"
- 
  lineinfile: 
    line: "{{ item.line }}"
    path: /etc/default/jenkins
  loop: 
    - { line: 'PORT="-1"' }
    - { line: 'HTTPS_PORT="443"' }
    - { line: 'HTTPS_KEYSTORE="/etc/jenkins/jenkins.jks"' }
    - { line: 'HTTPS_KEYSTORE_PASSWORD="{{ certbot_ssl_passphrase }}"' }
    - { line: 'JENKINS_HTTPS_LISTEN_ADDRESS="0.0.0.0"' }
    - { line: 'JENKINS_ARGS="--webroot=/var/cache/$NAME/war --httpsPort=$HTTPS_PORT --httpsKeyStore=$HTTPS_KEYSTORE --httpsKeyStorePassword=$HTTPS_KEYSTORE_PASSWORD --httpPort=-1"' }
  name: "Modify Jenkins Configuration for SSL"
- 
  cron: 
    day: "*/{{ certbot_renewal_days }}"
    hour: "0"
    job: "service jenkins stop"
    minute: "0"
    name: "Stop Jenkins"
  name: "Run the Jenkins Renewal every 70 Days, Stop Jenkins"
- 
  cron: 
    day: "*/{{ certbot_renewal_days }}"
    hour: "0"
    job: "sudo openssl pkcs12 -export -out /etc/letsencrypt/live/{{ certbot_domain }}/fullchain.p12 -passout 'pass:{{ certbot_ssl_passphrase }}' -inkey /etc/letsencrypt/live/{{ certbot_domain }}/privkey.pem -in /etc/letsencrypt/live/{{ certbot_domain }}/cert.pem -certfile /etc/letsencrypt/live/{{ certbot_domain }}/fullchain.pem -name {{ certbot_domain }}"
    minute: "2"
    name: "Generate PFX"
  name: "Run the Jenkins Renewal every 70 Days, Generate PFX"
- 
  cron: 
    day: "*/{{ certbot_renewal_days }}"
    hour: "0"
    job: "sudo keytool -delete -alias  {{ certbot_domain }} -keystore /etc/letsencrypt/live/{{ certbot_domain }}/jenkins.jks  -storepass {{ certbot_ssl_passphrase }}"
    minute: "3"
    name: "Delete old JKS"
  name: "Run the Jenkins Renewal every 70 Days, Generate JKS"
- 
  cron: 
    day: "*/{{ certbot_renewal_days }}"
    hour: "0"
    job: "sudo keytool -importkeystore -srckeystore /etc/letsencrypt/live/{{ certbot_domain }}/fullchain.p12 -srcstorepass {{ certbot_ssl_passphrase }} -srcstoretype PKCS12 -srcalias {{ certbot_domain }} -deststoretype JKS -destkeystore /etc/letsencrypt/live/{{ certbot_domain }}/jenkins.jks -deststorepass {{ certbot_ssl_passphrase }} -destalias {{ certbot_domain }}"
    minute: "4"
    name: "Generate JKS"
  name: "Run the Jenkins Renewal every 70 Days, Generate JKS"
- 
  cron: 
    day: "*/{{ certbot_renewal_days }}"
    hour: "0"
    job: "service jenkins start"
    minute: "5"
    name: "Start Jenkins"
  name: "Run the Jenkins Renewal every 70 Days, Start Jenkins"
